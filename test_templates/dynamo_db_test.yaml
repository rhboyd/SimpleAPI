Resources:
  RestAPI:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: "Dynamo Test API"

  SimpleResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt RestAPI.RootResourceId
      PathPart: "message"
      RestApiId: !Ref RestAPI
  SimpleProxyResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !Ref SimpleResource
      PathPart: "{partitionKey}"
      RestApiId: !Ref RestAPI
  SimpleSecondProxyResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !Ref SimpleProxyResource
      PathPart: "{sortKey}"
      RestApiId: !Ref RestAPI

  GetMethod:
    Type: AWS::ApiGateway::Method
    'Fn::Transform':
      - Name: SimpleAPI
    Properties:
      AuthorizationType: NONE
      MethodResponses: # TODO Pull this into the macro so the user doesn't have to list the responses
        - StatusCode: 200
        - StatusCode: 400
        - StatusCode: 500
      RestApiId:
        Ref: RestAPI
      ResourceId:
        Ref: SimpleSecondProxyResource
      HttpMethod: GET
      Integration:
        Credentials:
          Fn::GetAtt:
            - AdminRole
            - Arn
        Service: dynamodb
        Action:
         Name: PutItem
         Parameters:
          ## TODO This neeeds to be hard-coded for now.
          ## I have a couple ideas how to fix it, but haven't been able to test them yet
          - TableName: "MY-TABLE-NAME"
          - Item:
              PartitionKey:
                S: "$input.params('partitionKey')"
              SortKey:
                S: "$input.params('sortKey')"
        ResponseMaps:
          Success: #TODO
          Failure: #TODO

  MyDynamoTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: "MY-TABLE-NAME"
      AttributeDefinitions:
        - AttributeName: "PartitionKey"
          AttributeType: "S"
        - AttributeName: "SortKey"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "PartitionKey"
          KeyType: "HASH"
        - AttributeName: "SortKey"
          KeyType: "RANGE"
      ProvisionedThroughput:
        ReadCapacityUnits: "1"
        WriteCapacityUnits: "1"

  AdminRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "apigateway.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess